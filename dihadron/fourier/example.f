c       Last modified on August 16th, 2017 -- F. Gelis

c       Example of FORTRAN program using the functions and routines of
c       fourier.c. It uses an intermediate translation layer
c       'libFcompat.c' in order to convert between C and FORTRAN
c       argument passing conventions.
c
c       Details on the compilation are available in the makefile
c       provided in this package. It may not work with combinations of
c       compilers other than 'gcc' and 'g77/gfortran' due to differences
c       in the layout of the binary generated by different compilers.
c
c       Note that you should probably use DOUBLE PRECISION for all the
c       real variables, as the conversion between the C and FORTRAN
c       layers will not work if the real numbers are not 2 words (64
c       bits) wide.




c       The function F(k) in the Fourier integral: \int_0^inf dk J0(kx)F(k)

	FUNCTION F(k,params)
	DOUBLE PRECISION k
        DOUBLE PRECISION params(0:1)
        DOUBLE PRECISION F
        
c       k: the integration variable
c       
c       params: a table of double precision quantities that the function
c       may also depend on -- they remain constant during the
c       integration
c
c       NOTE: the function and the caller must agree on the number of
c       parameters in this table -- if we try to pull more parameters
c       from this table than were set by the caller, the program will
c       return random results or crash.
	
c       Example with one parameter:

        F = params(0)

c       Note: with this particular function F(k), the integral:

c                 G(x) = \int_0^inf dk J0(kx)F(k) 

C       is known in closed form and equals:

c                 G(x) = params(0)/x 

C       One can therefore use this example in order to test the code

        RETURN
        END


	FUNCTION G(x,params)
	DOUBLE PRECISION x
	DOUBLE PRECISION params(0:1)
	DOUBLE PRECISION G

	G = params(0)/x

	RETURN
	END


	PROGRAM example
	IMPLICIT NONE
	DOUBLE PRECISION x
	DOUBLE PRECISION result0
	DOUBLE PRECISION params(0:1)
	DOUBLE PRECISION fourier_j0
	DOUBLE PRECISION G
	EXTERNAL F

c	Some initialisation stuff -- in principle nothing should be
c	changed here (1000 is the number of zeros of J0(x) that have
c	been encoded in the table in the file fourier.c)

	CALL set_fpu_state()
	CALL gsl_set_error_handler_off()
	CALL init_workspace_fourier(1000)

c       extra parameters for the function F(k)
	
	params(0)=1.0
	params(1)=0.01

	x=1.0e-2

c       fourier_j0 is the function that calculates:

c       G(x) = \int_0^inf dk J0(kx)F(k) 

c       The first argument is the value of 'x'. The second argument is
c       the name of the function 'F' one wants to integrate (not
c       including the bessel function). And 'params' is a
c       one-dimensional array of double precision numbers which can be
c       passed to the function F (see the comments in the definition of
c       the function F for additional info)

 10	FORMAT(e25.20,' ',e25.20,' ',e25.20)

 20	result0=fourier_j0(x,F,params)
 	PRINT 10,x,result0,G(x,params)
	x=x*1.02D0
	IF (x.LT.10.0) GOTO 20

	END
	





